<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.storage.mapper.StorageCheckMapper">
    
    <resultMap type="StorageCheck" id="StorageCheckResult">
        <result property="id"    column="id"    />
        <result property="date"    column="date"    />
        <result property="staffId"    column="staff_id"    />
    </resultMap>

    <resultMap id="StorageCheckStorageCheckDetailResult" type="StorageCheck" extends="StorageCheckResult">
        <collection property="storageCheckDetailList" notNullColumn="sub_id" javaType="java.util.List" resultMap="StorageCheckDetailResult" />
    </resultMap>

    <resultMap type="StorageCheckDetail" id="StorageCheckDetailResult">
        <result property="id"    column="sub_id"    />
        <result property="checkId"    column="sub_check_id"    />
        <result property="materialId"    column="sub_material_id"    />
        <result property="storageId"    column="sub_storage_id"    />
        <result property="number"    column="sub_number"    />
    </resultMap>

    <sql id="selectStorageCheckVo">
        select id, date, staff_id from storage_check
    </sql>

    <select id="selectStorageCheckList" parameterType="StorageCheck" resultMap="StorageCheckResult">
        <include refid="selectStorageCheckVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="date != null "> and date = #{date}</if>
            <if test="staffId != null "> and staff_id = #{staffId}</if>
        </where>
    </select>
    
    <select id="selectStorageCheckById" parameterType="Long" resultMap="StorageCheckStorageCheckDetailResult">
        select a.id, a.date, a.staff_id,
 b.id as sub_id, b.check_id as sub_check_id, b.material_id as sub_material_id, b.storage_id as sub_storage_id, b.number as sub_number
        from storage_check a
        left join storage_check_detail b on b.check_id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertStorageCheck" parameterType="StorageCheck" useGeneratedKeys="true" keyProperty="id">
        insert into storage_check
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="date != null">date,</if>
            <if test="staffId != null">staff_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="date != null">#{date},</if>
            <if test="staffId != null">#{staffId},</if>
         </trim>
    </insert>

    <update id="updateStorageCheck" parameterType="StorageCheck">
        update storage_check
        <trim prefix="SET" suffixOverrides=",">
            <if test="date != null">date = #{date},</if>
            <if test="staffId != null">staff_id = #{staffId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStorageCheckById" parameterType="Long">
        delete from storage_check where id = #{id}
    </delete>

    <delete id="deleteStorageCheckByIds" parameterType="String">
        delete from storage_check where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteStorageCheckDetailByCheckIds" parameterType="String">
        delete from storage_check_detail where check_id in 
        <foreach item="checkId" collection="array" open="(" separator="," close=")">
            #{checkId}
        </foreach>
    </delete>

    <delete id="deleteStorageCheckDetailByCheckId" parameterType="Long">
        delete from storage_check_detail where check_id = #{checkId}
    </delete>

    <insert id="batchStorageCheckDetail">
        insert into storage_check_detail( id, check_id, material_id, storage_id, number) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.checkId}, #{item.materialId}, #{item.storageId}, #{item.number})
        </foreach>
    </insert>
</mapper>