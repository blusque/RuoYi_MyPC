<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.storage.mapper.StorageMoveMapper">
    
    <resultMap type="StorageMove" id="StorageMoveResult">
        <result property="id"    column="id"    />
        <result property="date"    column="date"    />
        <result property="staffId"    column="staff_id"    />
    </resultMap>

    <resultMap id="StorageMoveStorageMoveDetailResult" type="StorageMove" extends="StorageMoveResult">
        <collection property="storageMoveDetailList" notNullColumn="sub_id" javaType="java.util.List" resultMap="StorageMoveDetailResult" />
    </resultMap>

    <resultMap type="StorageMoveDetail" id="StorageMoveDetailResult">
        <result property="id"    column="sub_id"    />
        <result property="moveId"    column="sub_move_id"    />
        <result property="materialId"    column="sub_material_id"    />
        <result property="number"    column="sub_number"    />
        <result property="from"    column="sub_from"    />
        <result property="to"    column="sub_to"    />
    </resultMap>

    <sql id="selectStorageMoveVo">
        select id, date, staff_id from storage_move
    </sql>

    <select id="selectStorageMoveList" parameterType="StorageMove" resultMap="StorageMoveResult">
        <include refid="selectStorageMoveVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="date != null "> and date = #{date}</if>
            <if test="staffId != null "> and staff_id = #{staffId}</if>
        </where>
    </select>
    
    <select id="selectStorageMoveById" parameterType="Long" resultMap="StorageMoveStorageMoveDetailResult">
        select a.id, a.date, a.staff_id,
 b.id as sub_id, b.move_id as sub_move_id, b.material_id as sub_material_id, b.number as sub_number, b.from as sub_from, b.to as sub_to
        from storage_move a
        left join storage_move_detail b on b.move_id = a.id
        where a.id = #{id}
    </select>
        
    <insert id="insertStorageMove" parameterType="StorageMove" useGeneratedKeys="true" keyProperty="id">
        insert into storage_move
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="date != null">date,</if>
            <if test="staffId != null">staff_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="date != null">#{date},</if>
            <if test="staffId != null">#{staffId},</if>
         </trim>
    </insert>

    <update id="updateStorageMove" parameterType="StorageMove">
        update storage_move
        <trim prefix="SET" suffixOverrides=",">
            <if test="date != null">date = #{date},</if>
            <if test="staffId != null">staff_id = #{staffId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStorageMoveById" parameterType="Long">
        delete from storage_move where id = #{id}
    </delete>

    <delete id="deleteStorageMoveByIds" parameterType="String">
        delete from storage_move where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteStorageMoveDetailByMoveIds" parameterType="String">
        delete from storage_move_detail where move_id in 
        <foreach item="moveId" collection="array" open="(" separator="," close=")">
            #{moveId}
        </foreach>
    </delete>

    <delete id="deleteStorageMoveDetailByMoveId" parameterType="Long">
        delete from storage_move_detail where move_id = #{moveId}
    </delete>

    <insert id="batchStorageMoveDetail">
        insert into storage_move_detail( id, move_id, material_id, number, from, to) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.moveId}, #{item.materialId}, #{item.number}, #{item.from}, #{item.to})
        </foreach>
    </insert>
</mapper>